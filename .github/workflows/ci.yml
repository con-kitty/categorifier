name: categorifier
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  nix-build:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "ghc884"
          - "ghc8107"
          - "ghc901"
          - "ghc921"
        os: [ubuntu-latest]
        experimental: [false]
        include:
          - ghc: "ghc921"
            os: macos-latest
            experimental: false
          - ghc: "ghcHEAD"
            os: ubuntu-latest
            experimental: true
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Checkout repositiory code
      uses: actions/checkout@v3
    - name: dry-run
      run: nix build --dry-run --print-build-logs .#${{ matrix.ghc }}_all || ${{ matrix.experimental }}
    - name: build
      run: nix build --print-build-logs -j1 .#${{ matrix.ghc }}_all || ${{ matrix.experimental }}
  # We currently want to maintain at least non-nix build with up-to-date hackage index to check
  # the traditional builds keeps working.
  cabal-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc:
          - "8.10.1" # need an earlier revision than in Nix, because there's an API breakage that only affects 8.10.7
          - "9.2.2" # there's an API breakage introduced here
    env:
      CONFIG: "--enable-tests --enable-benchmarks"
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: "3.6.0.0"
      - run: cabal v2-update
      - run: cabal v2-freeze $CONFIG
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
      - run: cabal v2-test all $CONFIG
  format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: mrkkrp/ormolu-action@v5
  hlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/hlint-setup@v2
        with:
          version: '3.4'
      - uses: haskell/actions/hlint-run@v2
        with:
          path: '["category/", "client/", "common/", "duoids/", "hedgehog/", "plugin/"]'
          fail-on: status
